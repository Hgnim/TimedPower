<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="global.hibernate" xml:space="preserve">
    <value>休眠</value>
  </data>
  <data name="global.reboot" xml:space="preserve">
    <value>重启</value>
  </data>
  <data name="global.shutdown" xml:space="preserve">
    <value>关机</value>
  </data>
  <data name="global.sleep" xml:space="preserve">
    <value>睡眠</value>
  </data>
  <data name="global.userlock" xml:space="preserve">
    <value>锁定</value>
  </data>
  <data name="global.useroff" xml:space="preserve">
    <value>注销</value>
  </data>
  <data name="main.fileWindow.newTaskFile.filter" xml:space="preserve">
    <value>定时电源任务文件{0}</value>
  </data>
  <data name="main.fileWindow.newTaskFile.title" xml:space="preserve">
    <value>新建任务模板文件</value>
  </data>
  <data name="main.messagebox.checkUpdateFailed" xml:space="preserve">
    <value>更新检查失败！</value>
  </data>
  <data name="main.messagebox.downloadDone" xml:space="preserve">
    <value>最新版本下载完毕，是否执行安装？</value>
  </data>
  <data name="main.messagebox.downloadUpdateFailed" xml:space="preserve">
    <value>下载更新失败！</value>
  </data>
  <data name="main.messagebox.haveUpdate" xml:space="preserve">
<value>
## 检查到可用的更新，是否进行更新？
- 当前版本: V{0}
- 最新版本: {1}
- 发布时间: {2}
- 大小: {3}
### 发行说明:
#### {4}

{5}
</value>
  </data>
  <data name="main.messagebox.isNewVersion" xml:space="preserve">
    <value>当前已是最新版本</value>
  </data>
  <data name="main.messagebox.littleTimeWarning" xml:space="preserve">
    <value>计时时间小于等于5秒，确定继续吗？</value>
  </data>
  <data name="main.messagebox.newVersionNeedRemoveOldVersionReg" xml:space="preserve">
    <value>因当前程序版本更新，需要删除旧的注册表数据。如果取消，后续可使用软件开源仓库中提供的脚本进行删除。</value>
  </data>
  <data name="main.messagebox.onlyUseFuture" xml:space="preserve">
    <value>只能选择未来的时间！</value>
  </data>
  <data name="main.messagebox.thanksToUse" xml:space="preserve">
    <value>该软件已经为你服务{0}次啦。如果觉得好用，还请前往该软件的Github仓库中点亮Star以支持开发者！</value>
  </data>
  <data name="main.messagebox.thanksToUse2" xml:space="preserve">
    <value>感谢使用</value>
  </data>
  <data name="main.messagebox.timeValueError" xml:space="preserve">
    <value>时间格式错误！</value>
  </data>
  <data name="main.messagebox.timeValueTooBig" xml:space="preserve">
    <value>时间数值过大！</value>
  </data>
  <data name="main.winToast.timeWarning.button" xml:space="preserve">
    <value>终止定时</value>
  </data>
  <data name="main.winToast.timeWarning.text" xml:space="preserve">
    <value>警告，将在{0}后{1}</value>
  </data>
  <data name="main.winToast.timeWarning_autoTask.button" xml:space="preserve">
    <value>禁用当前任务</value>
  </data>
  <data name="main.winToast.timeWarning_autoTask.text" xml:space="preserve">
    <value>警告，名为"{0}"的自动定时任务将在{1}后执行{2}操作</value>
  </data>

<data name="autoTaskForm.text.newTaskName" xml:space="preserve">
    <value>新的自动任务</value>
  </data>
  <data name="autoTaskForm.messagebox.deleteFailed" xml:space="preserve">
    <value>删除失败！</value>
  </data>
  <data name="autoTaskForm.messagebox.haveNoSave" xml:space="preserve">
    <value>当前有未保存的内容，是否继续？</value>
  </data>
<data name="autoTaskForm.messagebox.defendMessage" xml:space="preserve">
    <value>警告，自动定时任务保护程序已阻止了一个可能的异常任务操作。
自动定时任务保护程序将在程序启动的30秒内和更改完自动定时任务设置的10秒内阻止任何电源操作。以避免可能的误操作。
点击确认以退出程序。</value>
  </data>

<data name="setting.contextMenu.title" xml:space="preserve">
    <value>定时电源</value>
  </data>
  <data name="setting.contextMenu.af15s" xml:space="preserve">
    <value>15秒后</value>
  </data>
  <data name="setting.contextMenu.af1min" xml:space="preserve">
    <value>1分钟后</value>
  </data>

  <data name="aboutForm.stats" xml:space="preserve">
    <value>所有统计信息仅会存储在本地
启动次数: {0}
执行操作次数: {1}

更多统计信息敬请期待...</value>
  </data>

  <data name="global.alias" xml:space="preserve">
    <value>定时电源</value>
  </data>

  <data name="main.messagebox.button.upgrade" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="main.messagebox.button.cancel" xml:space="preserve">
    <value>取消</value>
  </data>
</root>