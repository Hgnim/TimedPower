<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="global.hibernate" xml:space="preserve">
    <value>hibernate</value>
  </data>
  <data name="global.reboot" xml:space="preserve">
    <value>restart</value>
  </data>
  <data name="global.shutdown" xml:space="preserve">
    <value>shutdown</value>
  </data>
  <data name="global.sleep" xml:space="preserve">
    <value>sleep</value>
  </data>
  <data name="global.userlock" xml:space="preserve">
    <value>lock</value>
  </data>
  <data name="global.useroff" xml:space="preserve">
    <value>log off</value>
  </data>
  <data name="main.fileWindow.newTaskFile.filter" xml:space="preserve">
    <value>TimedPower task file {0}</value>
  </data>
  <data name="main.fileWindow.newTaskFile.title" xml:space="preserve">
    <value>The task file is saved as</value>
  </data>
  <data name="main.messagebox.checkUpdateFailed" xml:space="preserve">
    <value>Update check failed!</value>
  </data>
  <data name="main.messagebox.downloadDone" xml:space="preserve">
    <value>The latest version has been downloaded. Do you want to proceed with the installation?</value>
  </data>
  <data name="main.messagebox.downloadUpdateFailed" xml:space="preserve">
    <value>Download update failed!</value>
  </data>
  <data name="main.messagebox.haveUpdate" xml:space="preserve">
<value>
## Checked for available updates, do you want to update?
- Current version: V{0}
- Latest version: {1}
- Release time: {2}
- Size: {3}
### Release notes:
#### {4}

{5}
</value>
  </data>
  <data name="main.messagebox.isNewVersion" xml:space="preserve">
    <value>The current version is already the latest version.</value>
  </data>
  <data name="main.messagebox.littleTimeWarning" xml:space="preserve">
    <value>Are you sure to continue if the timer time is less than or equal to 5 seconds?</value>
  </data>
  <data name="main.messagebox.newVersionNeedRemoveOldVersionReg" xml:space="preserve">
    <value>Due to the current program version update, old registry data needs to be deleted. If cancelled, the scripts provided in the software open source repository can be used for deletion in the future.</value>
  </data>
  <data name="main.messagebox.onlyUseFuture" xml:space="preserve">
    <value>You can only choose a future time!</value>
  </data>
  <data name="main.messagebox.thanksToUse" xml:space="preserve">
    <value>This software has served you {0} times already. If you find it useful, please go to the Github repository of the software and light up Star to support developers!</value>
  </data>
  <data name="main.messagebox.thanksToUse2" xml:space="preserve">
    <value>Thank you for using</value>
  </data>
  <data name="main.messagebox.timeValueError" xml:space="preserve">
    <value>Time format error!</value>
  </data>
  <data name="main.messagebox.timeValueTooBig" xml:space="preserve">
    <value>The time value is too large!</value>
  </data>
  <data name="main.winToast.timeWarning.button" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="main.winToast.timeWarning.text" xml:space="preserve">
    <value>Warning, will be {1} after {0}</value>
  </data>
  <data name="main.winToast.timeWarning_autoTask.button" xml:space="preserve">
    <value>Disable current task</value>
  </data>
  <data name="main.winToast.timeWarning_autoTask.text" xml:space="preserve">
    <value>Warning, the automatic scheduled task named '{0}' will perform the {2} operation after {1}</value>
  </data>

  <data name="autoTaskForm.text.newTaskName" xml:space="preserve">
    <value>new task</value>
  </data>
  <data name="autoTaskForm.messagebox.deleteFailed" xml:space="preserve">
    <value>Delete failed!</value>
  </data>
  <data name="autoTaskForm.messagebox.haveNoSave" xml:space="preserve">
    <value>There is currently unsaved content, do you want to continue?</value>
  </data>
  <data name="autoTaskForm.messagebox.defendMessage" xml:space="preserve">
    <value>Warning, the automatic scheduled task protection program has prevented a possible abnormal task operation.
The automatic scheduled task protection program will prevent any power operation within 30 seconds of program startup and 10 seconds after changing the automatic scheduled task settings. To avoid possible misoperations.
Click confirm to exit the program.</value>
  </data>

<data name="setting.contextMenu.title" xml:space="preserve">
    <value>Timed Power</value>
  </data>
  <data name="setting.contextMenu.af15s" xml:space="preserve">
    <value>after 15s</value>
  </data>
  <data name="setting.contextMenu.af1min" xml:space="preserve">
    <value>after 1min</value>
  </data>

  <data name="global.alias" xml:space="preserve">
    <value>Timed Power</value>
  </data>

  <data name="main.messagebox.button.upgrade" xml:space="preserve">
    <value>Upgrade</value>
  </data>
  <data name="main.messagebox.button.cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>

  <data name="about.stats" xml:space="preserve">
    <value>All statistical information will only be stored locally

- Startup times: {0}
- Number of operations performed: {1}

More stats coming soon...</value>
  </data>
  <data name="about.main" xml:space="preserve">
    <value>
### About
{1}\
&lt;span class="version-color"&gt;{2}&lt;/span&gt; \
Github: [{3}]({3}) \
**{0}**

### Stats
{4}
    </value>
  </data>
  <data name="about.button.ok" xml:space="preserve">
    <value>ok</value>
  </data>
  <data name="about.title" xml:space="preserve">
    <value>About</value>
  </data>

  <data name="setting.taskFileAssociation.explain" xml:space="preserve">
    <value>Timed Power task file</value>
  </data>

  <data name="taskEditor.saveFailed" xml:space="preserve">
    <value>File save failed!</value>
  </data>
  <data name="taskEditor.loadFailed" xml:space="preserve">
    <value>File load failed!</value>
  </data>
</root>